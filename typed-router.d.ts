/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

/// <reference types="unplugin-vue-router/client" />

import type {
  // type safe route locations
  RouteLocationTypedList,
  RouteLocationResolvedTypedList,
  RouteLocationNormalizedTypedList,
  RouteLocationNormalizedLoadedTypedList,
  RouteLocationAsString,
  RouteLocationAsRelativeTypedList,
  RouteLocationAsPathTypedList,

  // helper types
  // route definitions
  RouteRecordInfo,
  ParamValue,
  ParamValueOneOrMore,
  ParamValueZeroOrMore,
  ParamValueZeroOrOne,

  // vue-router extensions
  _RouterTyped,
  RouterLinkTyped,
  RouterLinkPropsTyped,
  NavigationGuard,
  UseLinkFnTyped,

  // data fetching
  _DataLoader,
  _DefineLoaderOptions,
} from 'unplugin-vue-router/types'

declare module 'vue-router/auto/routes' {
  export interface RouteNamedMap {
    '$error': RouteRecordInfo<'$error', '/:error(.*)', { error: ParamValue<true> }, { error: ParamValue<false> }>,
    'agents-agent-details': RouteRecordInfo<'agents-agent-details', '/Agents/AgentDetails', Record<never, never>, Record<never, never>>,
    'agents-agent-list': RouteRecordInfo<'agents-agent-list', '/Agents/AgentList', Record<never, never>, Record<never, never>>,
    'agents-dialog-agent-create-dialog': RouteRecordInfo<'agents-dialog-agent-create-dialog', '/Agents/Dialog/AgentCreateDialog', Record<never, never>, Record<never, never>>,
    'agents-dialog-agent-edit-dialog': RouteRecordInfo<'agents-dialog-agent-edit-dialog', '/Agents/Dialog/AgentEditDialog', Record<never, never>, Record<never, never>>,
    'agents-dialog-agent-invite-dialog': RouteRecordInfo<'agents-dialog-agent-invite-dialog', '/Agents/Dialog/AgentInviteDialog', Record<never, never>, Record<never, never>>,
    'agents-invoice': RouteRecordInfo<'agents-invoice', '/Agents/Invoice', Record<never, never>, Record<never, never>>,
    'agents-partials-agent-action-header': RouteRecordInfo<'agents-partials-agent-action-header', '/Agents/Partials/AgentActionHeader', Record<never, never>, Record<never, never>>,
    'agents-partials-agent-bio-panel': RouteRecordInfo<'agents-partials-agent-bio-panel', '/Agents/Partials/AgentBioPanel', Record<never, never>, Record<never, never>>,
    'agents-partials-agent-booking-table': RouteRecordInfo<'agents-partials-agent-booking-table', '/Agents/Partials/AgentBookingTable', Record<never, never>, Record<never, never>>,
    'agents-partials-agent-overview': RouteRecordInfo<'agents-partials-agent-overview', '/Agents/Partials/AgentOverview', Record<never, never>, Record<never, never>>,
    'agents-partials-agent-payments-table': RouteRecordInfo<'agents-partials-agent-payments-table', '/Agents/Partials/AgentPaymentsTable', Record<never, never>, Record<never, never>>,
    'agents-partials-agent-tabs': RouteRecordInfo<'agents-partials-agent-tabs', '/Agents/Partials/AgentTabs', Record<never, never>, Record<never, never>>,
    'agents-payment-partials-billing-activity': RouteRecordInfo<'agents-payment-partials-billing-activity', '/Agents/Payment/Partials/BillingActivity', Record<never, never>, Record<never, never>>,
    'agents-payment-partials-booking-details-table': RouteRecordInfo<'agents-payment-partials-booking-details-table', '/Agents/Payment/Partials/BookingDetailsTable', Record<never, never>, Record<never, never>>,
    'agents-payment-partials-payment-action-header': RouteRecordInfo<'agents-payment-partials-payment-action-header', '/Agents/Payment/Partials/PaymentActionHeader', Record<never, never>, Record<never, never>>,
    'agents-payment-partials-payment-overview': RouteRecordInfo<'agents-payment-partials-payment-overview', '/Agents/Payment/Partials/PaymentOverview', Record<never, never>, Record<never, never>>,
    'agents-payment-partials-payments-table': RouteRecordInfo<'agents-payment-partials-payments-table', '/Agents/Payment/Partials/PaymentsTable', Record<never, never>, Record<never, never>>,
    'agents-payment-payment-details': RouteRecordInfo<'agents-payment-payment-details', '/Agents/Payment/PaymentDetails', Record<never, never>, Record<never, never>>,
    'agents-payment-payment-history': RouteRecordInfo<'agents-payment-payment-history', '/Agents/Payment/PaymentHistory', Record<never, never>, Record<never, never>>,
    'auth-confirm-otp': RouteRecordInfo<'auth-confirm-otp', '/Auth/ConfirmOTP', Record<never, never>, Record<never, never>>,
    'auth-email-confirmation': RouteRecordInfo<'auth-email-confirmation', '/Auth/EmailConfirmation', Record<never, never>, Record<never, never>>,
    'auth-forgot-password': RouteRecordInfo<'auth-forgot-password', '/Auth/ForgotPassword', Record<never, never>, Record<never, never>>,
    'auth-login': RouteRecordInfo<'auth-login', '/Auth/Login', Record<never, never>, Record<never, never>>,
    'auth-reset-password': RouteRecordInfo<'auth-reset-password', '/Auth/ResetPassword', Record<never, never>, Record<never, never>>,
    'auth-sent-otp': RouteRecordInfo<'auth-sent-otp', '/Auth/SentOTP', Record<never, never>, Record<never, never>>,
    'auth-wizard-register': RouteRecordInfo<'auth-wizard-register', '/Auth/Wizard/Register', Record<never, never>, Record<never, never>>,
    'bookings-booking-details': RouteRecordInfo<'bookings-booking-details', '/Bookings/BookingDetails', Record<never, never>, Record<never, never>>,
    'bookings-booking-list': RouteRecordInfo<'bookings-booking-list', '/Bookings/BookingList', Record<never, never>, Record<never, never>>,
    'bookings-invoice-booking-invoice': RouteRecordInfo<'bookings-invoice-booking-invoice', '/Bookings/Invoice/BookingInvoice', Record<never, never>, Record<never, never>>,
    'bookings-partials-booking-action-header': RouteRecordInfo<'bookings-partials-booking-action-header', '/Bookings/Partials/BookingActionHeader', Record<never, never>, Record<never, never>>,
    'bookings-partials-booking-details-activity': RouteRecordInfo<'bookings-partials-booking-details-activity', '/Bookings/Partials/BookingDetailsActivity', Record<never, never>, Record<never, never>>,
    'bookings-partials-booking-details-table': RouteRecordInfo<'bookings-partials-booking-details-table', '/Bookings/Partials/BookingDetailsTable', Record<never, never>, Record<never, never>>,
    'bookings-partials-card-agent-details': RouteRecordInfo<'bookings-partials-card-agent-details', '/Bookings/Partials/CardAgentDetails', Record<never, never>, Record<never, never>>,
    'bookings-partials-card-flight-details': RouteRecordInfo<'bookings-partials-card-flight-details', '/Bookings/Partials/CardFlightDetails', Record<never, never>, Record<never, never>>,
    'bookings-partials-card-text-contact-details': RouteRecordInfo<'bookings-partials-card-text-contact-details', '/Bookings/Partials/CardTextContactDetails', Record<never, never>, Record<never, never>>,
    'bookings-partials-card-text-emergency-contact-details': RouteRecordInfo<'bookings-partials-card-text-emergency-contact-details', '/Bookings/Partials/CardTextEmergencyContactDetails', Record<never, never>, Record<never, never>>,
    'bookings-partials-card-text-food-and-drugs': RouteRecordInfo<'bookings-partials-card-text-food-and-drugs', '/Bookings/Partials/CardTextFoodAndDrugs', Record<never, never>, Record<never, never>>,
    'bookings-partials-card-text-highlights': RouteRecordInfo<'bookings-partials-card-text-highlights', '/Bookings/Partials/CardTextHighlights', Record<never, never>, Record<never, never>>,
    'bookings-partials-card-text-passport-details': RouteRecordInfo<'bookings-partials-card-text-passport-details', '/Bookings/Partials/CardTextPassportDetails', Record<never, never>, Record<never, never>>,
    'bookings-partials-card-traveler-details': RouteRecordInfo<'bookings-partials-card-traveler-details', '/Bookings/Partials/CardTravelerDetails', Record<never, never>, Record<never, never>>,
    'bookings-partials-card-traveler-details-down': RouteRecordInfo<'bookings-partials-card-traveler-details-down', '/Bookings/Partials/CardTravelerDetailsDown', Record<never, never>, Record<never, never>>,
    'bookings-partials-card-travel-note': RouteRecordInfo<'bookings-partials-card-travel-note', '/Bookings/Partials/CardTravelNote', Record<never, never>, Record<never, never>>,
    'bookings-partials-flight-row': RouteRecordInfo<'bookings-partials-flight-row', '/Bookings/Partials/FlightRow', Record<never, never>, Record<never, never>>,
    'bookings-partials-form-booking-note': RouteRecordInfo<'bookings-partials-form-booking-note', '/Bookings/Partials/FormBookingNote', Record<never, never>, Record<never, never>>,
    'bookings-partials-form-payment': RouteRecordInfo<'bookings-partials-form-payment', '/Bookings/Partials/FormPayment', Record<never, never>, Record<never, never>>,
    'bookings-partials-form-traveler-details': RouteRecordInfo<'bookings-partials-form-traveler-details', '/Bookings/Partials/FormTravelerDetails', Record<never, never>, Record<never, never>>,
    'bookings-pdfprint-traveler-details': RouteRecordInfo<'bookings-pdfprint-traveler-details', '/Bookings/PDF/PrintTravelerDetails', Record<never, never>, Record<never, never>>,
    'contacts-contact-details': RouteRecordInfo<'contacts-contact-details', '/Contacts/ContactDetails', Record<never, never>, Record<never, never>>,
    'contacts-contact-list': RouteRecordInfo<'contacts-contact-list', '/Contacts/ContactList', Record<never, never>, Record<never, never>>,
    'dashboard': RouteRecordInfo<'dashboard', '/Dashboard', Record<never, never>, Record<never, never>>,
    'forgot-password': RouteRecordInfo<'forgot-password', '/forgot-password', Record<never, never>, Record<never, never>>,
    'not-authorized': RouteRecordInfo<'not-authorized', '/not-authorized', Record<never, never>, Record<never, never>>,
    'print-invoice': RouteRecordInfo<'print-invoice', '/Print/Invoice', Record<never, never>, Record<never, never>>,
    'print-traveler-details': RouteRecordInfo<'print-traveler-details', '/Print/TravelerDetails', Record<never, never>, Record<never, never>>,
    'profile-partials-user-bio-panel': RouteRecordInfo<'profile-partials-user-bio-panel', '/Profile/Partials/UserBioPanel', Record<never, never>, Record<never, never>>,
    'profile-partials-user-tab-account': RouteRecordInfo<'profile-partials-user-tab-account', '/Profile/Partials/UserTabAccount', Record<never, never>, Record<never, never>>,
    'profile-partials-user-tab-security': RouteRecordInfo<'profile-partials-user-tab-security', '/Profile/Partials/UserTabSecurity', Record<never, never>, Record<never, never>>,
    'profile-show': RouteRecordInfo<'profile-show', '/Profile/Show', Record<never, never>, Record<never, never>>,
    'travel-categories-dialog-category-create-dialog': RouteRecordInfo<'travel-categories-dialog-category-create-dialog', '/TravelCategories/Dialog/CategoryCreateDialog', Record<never, never>, Record<never, never>>,
    'travel-categories-dialog-category-edit-dialog': RouteRecordInfo<'travel-categories-dialog-category-edit-dialog', '/TravelCategories/Dialog/CategoryEditDialog', Record<never, never>, Record<never, never>>,
    'travel-categories-travel-category-list': RouteRecordInfo<'travel-categories-travel-category-list', '/TravelCategories/TravelCategoryList', Record<never, never>, Record<never, never>>,
    'travel-destinations-dialog-destination-create-dialog': RouteRecordInfo<'travel-destinations-dialog-destination-create-dialog', '/TravelDestinations/Dialog/DestinationCreateDialog', Record<never, never>, Record<never, never>>,
    'travel-destinations-dialog-destination-edit-dialog': RouteRecordInfo<'travel-destinations-dialog-destination-edit-dialog', '/TravelDestinations/Dialog/DestinationEditDialog', Record<never, never>, Record<never, never>>,
    'travel-destinations-travel-destination-list': RouteRecordInfo<'travel-destinations-travel-destination-list', '/TravelDestinations/TravelDestinationList', Record<never, never>, Record<never, never>>,
    'travelers-dialog-traveler-create-dialog': RouteRecordInfo<'travelers-dialog-traveler-create-dialog', '/Travelers/Dialog/TravelerCreateDialog', Record<never, never>, Record<never, never>>,
    'travelers-dialog-traveler-edit-dialog': RouteRecordInfo<'travelers-dialog-traveler-edit-dialog', '/Travelers/Dialog/TravelerEditDialog', Record<never, never>, Record<never, never>>,
    'travelers-partials-contact-details-card': RouteRecordInfo<'travelers-partials-contact-details-card', '/Travelers/Partials/ContactDetailsCard', Record<never, never>, Record<never, never>>,
    'travelers-partials-emergency-contacts-card': RouteRecordInfo<'travelers-partials-emergency-contacts-card', '/Travelers/Partials/EmergencyContactsCard', Record<never, never>, Record<never, never>>,
    'travelers-partials-food-and-drug-status-card': RouteRecordInfo<'travelers-partials-food-and-drug-status-card', '/Travelers/Partials/FoodAndDrugStatusCard', Record<never, never>, Record<never, never>>,
    'travelers-partials-highlight-details-card': RouteRecordInfo<'travelers-partials-highlight-details-card', '/Travelers/Partials/HighlightDetailsCard', Record<never, never>, Record<never, never>>,
    'travelers-partials-passport-details-card': RouteRecordInfo<'travelers-partials-passport-details-card', '/Travelers/Partials/PassportDetailsCard', Record<never, never>, Record<never, never>>,
    'travelers-partials-traveler-action-header': RouteRecordInfo<'travelers-partials-traveler-action-header', '/Travelers/Partials/TravelerActionHeader', Record<never, never>, Record<never, never>>,
    'travelers-partials-traveler-bio-panel': RouteRecordInfo<'travelers-partials-traveler-bio-panel', '/Travelers/Partials/TravelerBioPanel', Record<never, never>, Record<never, never>>,
    'travelers-partials-traveler-booking-table': RouteRecordInfo<'travelers-partials-traveler-booking-table', '/Travelers/Partials/TravelerBookingTable', Record<never, never>, Record<never, never>>,
    'travelers-partials-traveler-overview': RouteRecordInfo<'travelers-partials-traveler-overview', '/Travelers/Partials/TravelerOverview', Record<never, never>, Record<never, never>>,
    'travelers-partials-traveler-relationship-card': RouteRecordInfo<'travelers-partials-traveler-relationship-card', '/Travelers/Partials/TravelerRelationshipCard', Record<never, never>, Record<never, never>>,
    'travelers-traveler-details': RouteRecordInfo<'travelers-traveler-details', '/Travelers/TravelerDetails', Record<never, never>, Record<never, never>>,
    'travelers-traveler-list': RouteRecordInfo<'travelers-traveler-list', '/Travelers/TravelerList', Record<never, never>, Record<never, never>>,
    'travel-package-create-travel-package': RouteRecordInfo<'travel-package-create-travel-package', '/TravelPackage/CreateTravelPackage', Record<never, never>, Record<never, never>>,
    'travel-package-edit-travel-package': RouteRecordInfo<'travel-package-edit-travel-package', '/TravelPackage/EditTravelPackage', Record<never, never>, Record<never, never>>,
    'travel-package-list-travel-package': RouteRecordInfo<'travel-package-list-travel-package', '/TravelPackage/ListTravelPackage', Record<never, never>, Record<never, never>>,
    'travel-package-partials-condition-list': RouteRecordInfo<'travel-package-partials-condition-list', '/TravelPackage/Partials/ConditionList', Record<never, never>, Record<never, never>>,
    'travel-package-partials-image-gallery': RouteRecordInfo<'travel-package-partials-image-gallery', '/TravelPackage/Partials/ImageGallery', Record<never, never>, Record<never, never>>,
    'travel-package-partials-meta-image': RouteRecordInfo<'travel-package-partials-meta-image', '/TravelPackage/Partials/MetaImage', Record<never, never>, Record<never, never>>,
    'users-dialog-user-edit-dialog': RouteRecordInfo<'users-dialog-user-edit-dialog', '/Users/Dialog/UserEditDialog', Record<never, never>, Record<never, never>>,
    'users-user-create-modal': RouteRecordInfo<'users-user-create-modal', '/Users/UserCreateModal', Record<never, never>, Record<never, never>>,
    'users-user-list': RouteRecordInfo<'users-user-list', '/Users/UserList', Record<never, never>, Record<never, never>>,
    'users-user-statistics': RouteRecordInfo<'users-user-statistics', '/Users/UserStatistics', Record<never, never>, Record<never, never>>,
    'widgets-card-popular-packages': RouteRecordInfo<'widgets-card-popular-packages', '/Widgets/CardPopularPackages', Record<never, never>, Record<never, never>>,
    'widgets-card-revenue-report': RouteRecordInfo<'widgets-card-revenue-report', '/Widgets/CardRevenueReport', Record<never, never>, Record<never, never>>,
    'widgets-card-statistics': RouteRecordInfo<'widgets-card-statistics', '/Widgets/CardStatistics', Record<never, never>, Record<never, never>>,
    'widgets-card-statistics-generated-leads': RouteRecordInfo<'widgets-card-statistics-generated-leads', '/Widgets/CardStatisticsGeneratedLeads', Record<never, never>, Record<never, never>>,
  }
}

declare module 'vue-router/auto' {
  import type { RouteNamedMap } from 'vue-router/auto/routes'

  export type RouterTyped = _RouterTyped<RouteNamedMap>

  /**
   * Type safe version of `RouteLocationNormalized` (the type of `to` and `from` in navigation guards).
   * Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationNormalized<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationNormalizedTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocationNormalizedLoaded` (the return type of `useRoute()`).
   * Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationNormalizedLoaded<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocationResolved` (the returned route of `router.resolve()`).
   * Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationResolved<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationResolvedTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocation` . Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocation<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocationRaw` . Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationRaw<Name extends keyof RouteNamedMap = keyof RouteNamedMap> =
    | RouteLocationAsString<RouteNamedMap>
    | RouteLocationAsRelativeTypedList<RouteNamedMap>[Name]
    | RouteLocationAsPathTypedList<RouteNamedMap>[Name]

  /**
   * Generate a type safe params for a route location. Requires the name of the route to be passed as a generic.
   */
  export type RouteParams<Name extends keyof RouteNamedMap> = RouteNamedMap[Name]['params']
  /**
   * Generate a type safe raw params for a route location. Requires the name of the route to be passed as a generic.
   */
  export type RouteParamsRaw<Name extends keyof RouteNamedMap> = RouteNamedMap[Name]['paramsRaw']

  export function useRouter(): RouterTyped
  export function useRoute<Name extends keyof RouteNamedMap = keyof RouteNamedMap>(name?: Name): RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[Name]

  export const useLink: UseLinkFnTyped<RouteNamedMap>

  export function onBeforeRouteLeave(guard: NavigationGuard<RouteNamedMap>): void
  export function onBeforeRouteUpdate(guard: NavigationGuard<RouteNamedMap>): void

  export const RouterLink: RouterLinkTyped<RouteNamedMap>
  export const RouterLinkProps: RouterLinkPropsTyped<RouteNamedMap>

  // Experimental Data Fetching

  export function defineLoader<
    P extends Promise<any>,
    Name extends keyof RouteNamedMap = keyof RouteNamedMap,
    isLazy extends boolean = false,
  >(
    name: Name,
    loader: (route: RouteLocationNormalizedLoaded<Name>) => P,
    options?: _DefineLoaderOptions<isLazy>,
  ): _DataLoader<Awaited<P>, isLazy>
  export function defineLoader<
    P extends Promise<any>,
    isLazy extends boolean = false,
  >(
    loader: (route: RouteLocationNormalizedLoaded) => P,
    options?: _DefineLoaderOptions<isLazy>,
  ): _DataLoader<Awaited<P>, isLazy>

  export {
    _definePage as definePage,
    _HasDataLoaderMeta as HasDataLoaderMeta,
    _setupDataFetchingGuard as setupDataFetchingGuard,
    _stopDataFetchingScope as stopDataFetchingScope,
  } from 'unplugin-vue-router/runtime'
}

declare module 'vue-router' {
  import type { RouteNamedMap } from 'vue-router/auto/routes'

  export interface TypesConfig {
    beforeRouteUpdate: NavigationGuard<RouteNamedMap>
    beforeRouteLeave: NavigationGuard<RouteNamedMap>

    $route: RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[keyof RouteNamedMap]
    $router: _RouterTyped<RouteNamedMap>

    RouterLink: RouterLinkTyped<RouteNamedMap>
  }
}
